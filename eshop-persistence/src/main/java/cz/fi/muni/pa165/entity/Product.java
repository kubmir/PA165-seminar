package cz.fi.muni.pa165.entity;

import cz.fi.muni.pa165.enums.Color;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// TODO Map class Product to be an entity with the following attributes:
// * id - autogenerated @Id using IDENTITY column
// * name - nonnullable, unique
// * color - you will have to create new ENUM for this
// * java.util.Date addedDate - this field should contain only date in the database. Use @Temporal annotation
// Then persist exactly one Product with the following values:
// * name='Guitar'
// * color=Color.BLACK
// * dateAdded = 20-01-2011 - to fill java.util.Date use Calendar 
//
// Additional task: Change the underlying table of Product entity to be ESHOP_PRODUCTS. After you do this, check this by inspecting console output (the CREATE TABLE statement)
//
// To test your code uncomment the commented code at the end of this method.
@Entity
public class Product implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Column(nullable = false, unique = true)
    private String name;

    @Enumerated
    private Color color;

    @Temporal(TemporalType.DATE)
    private java.util.Date addedDate;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public Date getAddedDate() {
        return addedDate;
    }

    public void setAddedDate(Date addedDate) {
        this.addedDate = addedDate;
    }

    @Override
    public String toString() {
        return "Product{" + "id=" + id + ", name=" + name
                + ", color=" + color + ", dateAdded=" + addedDate + '}';
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof Product)) {
            return false;
        }
        
        Product other = (Product) obj;
        if (name == null) {
            if (other.name != null) {
                return false;
            }
        } else if (!name.equals(other.getName())) {
            return false;
        }
        
        return true;
    }
}
